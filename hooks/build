#!/bin/bash

source hooks/_conf

if [ "${DOCKERFILE_PATH:-}" == "" ]; then
    DOCKERFILE_PATH="."
fi

function docker_build() {

    DOCKER_PLATFORM="$1"
    DOCKER_PLATFORM_NAME="$(echo "${DOCKER_PLATFORM}" | jq -r '.platform')"

    DOCKER_PLATFORM_ARCH="$(echo "${DOCKER_PLATFORM}" | jq -r '.architecture')"
    SELECT_FILTER=".platform.architecture == \"${DOCKER_PLATFORM_ARCH}\""

    DOCKER_PLATFORM_VARIANT="$(echo "${DOCKER_PLATFORM}" | jq -r '.variant')"
    if [ "${DOCKER_PLATFORM_VARIANT}" != "null" ]; then
        SELECT_FILTER="${SELECT_FILTER} and .platform.variant == \"${DOCKER_PLATFORM_VARIANT}\""
    fi

    DOCKER_BUILD_ARGS=""
    for DOCKER_IMAGE_ITEM in $(grep '^ARG .*_IMAGE=' Dockerfile | cut -f2 -d' ' | sort -u); do

        DOCKER_IMAGE="${DOCKER_IMAGE_ITEM/*=/}"
        DOCKER_IMAGE_ARG="${DOCKER_IMAGE_ITEM/=*/}"
        DOCKER_IMAGE_NAME="${DOCKER_IMAGE/:*/}"

        DOCKER_IMAGE_MANIFEST="$(echo "${DOCKER_IMAGE}" | tr '/:' '__')-manifest.json"
        if [ ! -f "${DOCKER_IMAGE_MANIFEST}" ]; then
            docker manifest inspect "${DOCKER_IMAGE}" > "${DOCKER_IMAGE_MANIFEST}"
        fi

        DOCKER_IMAGE_DIGEST="$(jq -r ".manifests[] | select(${SELECT_FILTER}) | .digest" "${DOCKER_IMAGE_MANIFEST}")"
        DOCKER_BUILD_ARGS="${DOCKER_BUILD_ARGS} --build-arg ${DOCKER_IMAGE_ARG}=${DOCKER_IMAGE_NAME}@${DOCKER_IMAGE_DIGEST}"

    done

    DOCKER_BUILD_ARGS="${DOCKER_BUILD_ARGS:1}"
    docker build ${DOCKER_BUILD_ARGS} -t "${DOCKER_REPO}:${DOCKER_PLATFORM_NAME}-${DOCKER_TAG}" "${DOCKERFILE_PATH}"
}

find . -type f -name '*-manifest.json' -delete

for DOCKER_PLATFORM in ${DOCKER_PLATFORMS}; do
    docker_build "${DOCKER_PLATFORM}"
done
