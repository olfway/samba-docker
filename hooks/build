#!/bin/bash

source hooks/_conf

if [ "${DOCKERFILE_PATH:-}" == "" ]; then
    DOCKERFILE_PATH="."
fi

function docker_build() {

    DOCKER_PLATFORM_NAME="$1"

    echo "$(date '+%H:%M:%S') Building ${DOCKER_REPO}:${DOCKER_PLATFORM_NAME}${DOCKER_TAG}..."

    DOCKER_PLATFORM="$(echo "${DOCKER_PLATFORMS}" | jq -r "select(.platform == \"${DOCKER_PLATFORM_NAME}\")" | tr -d '\n ')"

    DOCKER_PLATFORM_ARCH="$(echo "${DOCKER_PLATFORM}" | jq -r '.architecture')"
    SELECT_FILTER=".platform.architecture == \"${DOCKER_PLATFORM_ARCH}\""

    DOCKER_PLATFORM_VARIANT="$(echo "${DOCKER_PLATFORM}" | jq -r '.variant')"
    if [ "${DOCKER_PLATFORM_VARIANT}" != "null" ]; then
        SELECT_FILTER="${SELECT_FILTER} and .platform.variant == \"${DOCKER_PLATFORM_VARIANT}\""
    fi

    DOCKER_BUILD_ARGS=""
    for DOCKER_IMAGE_ITEM in $(grep '^ARG .*_IMAGE=' Dockerfile | cut -f2 -d' ' | sort -u); do

        DOCKER_IMAGE="${DOCKER_IMAGE_ITEM/*=/}"
        DOCKER_IMAGE_ARG="${DOCKER_IMAGE_ITEM/=*/}"
        DOCKER_IMAGE_NAME="${DOCKER_IMAGE/:*/}"

        DOCKER_IMAGE_MANIFEST="$(echo "${DOCKER_IMAGE}" | tr '/:' '__')-manifest.json"
        if [ ! -f "${DOCKER_IMAGE_MANIFEST}" ]; then
            docker manifest inspect "${DOCKER_IMAGE}" > "${DOCKER_IMAGE_MANIFEST}"
        fi

        DOCKER_IMAGE_DIGEST="$(jq -r ".manifests[] | select(${SELECT_FILTER}) | .digest" "${DOCKER_IMAGE_MANIFEST}")"
        DOCKER_BUILD_ARGS="${DOCKER_BUILD_ARGS} --build-arg ${DOCKER_IMAGE_ARG}=${DOCKER_IMAGE_NAME}@${DOCKER_IMAGE_DIGEST}"

    done

    DOCKER_BUILD_ARGS="${DOCKER_BUILD_ARGS:1}"

    case $DOCKER_PLATFORM_NAME in
        amd64)
            DOCKER_BUILD_ARGS="$DOCKER_BUILD_ARGS --build-arg ARCH_DEBIAN=amd64"
            ;;
        aarch64)
            DOCKER_BUILD_ARGS="$DOCKER_BUILD_ARGS --build-arg ARCH_DEBIAN=arm64 --build-arg QEMU=qemu-aarch64-static --build-arg TOOLCHAIN=aarch64-linux-gnu"
            ;;
        arm32v7)
            DOCKER_BUILD_ARGS="$DOCKER_BUILD_ARGS --build-arg ARCH_DEBIAN=armhf --build-arg QEMU=qemu-arm-static --build-arg TOOLCHAIN=arm-linux-gnueabihf"
            ;;
        arm32v5)
            DOCKER_BUILD_ARGS="$DOCKER_BUILD_ARGS --build-arg ARCH_DEBIAN=armel --build-arg QEMU=qemu-arm-static --build-arg TOOLCHAIN=arm-linux-gnueabi"
            ;;
    esac

    echo "$(date '+%H:%M:%S') Running docker build ${DOCKER_BUILD_ARGS} -t ${DOCKER_REPO}:${DOCKER_PLATFORM_NAME}${DOCKER_TAG} -t ${DOCKER_REPO}:${DOCKER_PLATFORM_NAME}${DOCKER_TAG_REV} ${DOCKERFILE_PATH}"
    docker build ${DOCKER_BUILD_ARGS} -t "${DOCKER_REPO}:${DOCKER_PLATFORM_NAME}${DOCKER_TAG}" -t "${DOCKER_REPO}:${DOCKER_PLATFORM_NAME}${DOCKER_TAG_REV}" "${DOCKERFILE_PATH}"
}

find . -type f -name '*-manifest.json' -delete

if [ "${DOCKER_PLATFORM_NAME}" != "" ]; then
    docker_build "${DOCKER_PLATFORM_NAME}"
else
    for DOCKER_PLATFORM_NAME in ${DOCKER_PLATFORM_NAMES}; do
        docker_build "${DOCKER_PLATFORM_NAME}"
    done
fi
